package com.eventuror.brainspew.relationships;

import java.io.Serializable;

import javax.persistence.Column;
import javax.persistence.Embeddable;

@Embeddable
public class ThoughtParentId
    implements Serializable {
 
    @Column(name = "thought_id")
    private long thoughtId;
 
    @Column(name = "parent_id")
    private long parentId;
 
    private ThoughtParentId() {}
 
    public ThoughtParentId(
        long thoughtId,
        long parentId) {
        this.thoughtId = thoughtId;
        this.parentId = parentId;
    }
    
    @Entity(name = "PostTag")
    @Table(name = "post_tag")
    public class PostTag {
     
        @EmbeddedId
        private PostTagId id;
     
        @ManyToOne(fetch = FetchType.LAZY)
        @MapsId("postId")
        private Post post;
     
        @ManyToOne(fetch = FetchType.LAZY)
        @MapsId("tagId")
        private Tag tag;
     
        @Column(name = "created_on")
        private Date createdOn = new Date();
     
        private PostTag() {}
     
        public PostTag(Post post, Tag tag) {
            this.post = post;
            this.tag = tag;
            this.id = new PostTagId(post.getId(), tag.getId());
        }
     
        //Getters and setters omitted for brevity
     
        @Override
        public boolean equals(Object o) {
            if (this == o) return true;
     
            if (o == null || getClass() != o.getClass())
                return false;
     
            PostTag that = (PostTag) o;
            return Objects.equals(post, that.post) &&
                   Objects.equals(tag, that.tag);
        }
     
        @Override
        public int hashCode() {
            return Objects.hash(post, tag);
        }
    }
}